name: Deploy Full-Stack App to Lightsail

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Get the source code from your repository.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Build the Go backend ON THE GITHUB RUNNER.
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Build Go Backend
        run: |
          cd Backend
          go build -o my-go-app main.go

      # Step 3: Build the React frontend ON THE GITHUB RUNNER.
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Frontend Dependencies & Build
        run: |
          cd Frontend
          npm install
          npm run build

      # Step 4: Deploy the BUILT ARTIFACTS to your Lightsail server.
      - name: Deploy to Lightsail via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_SSH_PRIVATE_KEY }}
          # --- This script is now much simpler! ---
          # It only copies files and restarts services. NO building happens on your server.
          script: |
            echo "Stopping services..."
            pm2 stop go-api || true
            
            echo "Removing old application files..."
            rm -f ~/MRF/Backend/my-go-app
            sudo rm -rf /var/www/my-react-app/*
            
            echo "Copying new built files from GitHub Runner..."
            # The ssh-action automatically copies the built files to your server's home (~) directory.
            # We now move them to their final destination.
            mv ~/my-go-app ~/MRF/Backend/my-go-app
            chmod +x ~/MRF/Backend/my-go-app
            sudo mv ~/dist/* /var/www/my-react-app/
            
            echo "Creating/Updating backend .env file from secrets..."
            echo "DB_SOURCE=postgresql://myapp_user:${{ secrets.DB_PASSWORD }}@localhost:5432/myapp_db" > ~/MRF/Backend/.env
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> ~/MRF/Backend/.env
            
            echo "Restarting services..."
            cd ~/MRF/Backend
            pm2 restart go-api --update-env
            sudo systemctl restart nginx
            
            echo ">>> Deployment Successful!"
